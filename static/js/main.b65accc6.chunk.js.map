{"version":3,"sources":["components/Header.js","components/Search.js","components/SearchResults.js","components/Error.js","components/MovieSearch.js","components/MovieDetail.js","components/FavouriteMovies.js","App.js","serviceWorker.js","index.js"],"names":["Header","AppBar","position","Toolbar","className","to","activeClassName","Component","Search","Grid","container","spacing","direction","alignItems","justify","style","minHeight","onSubmit","this","props","search","noValidate","autoComplete","TextField","id","label","value","searchQuery","onChange","e","InputProps","endAdornment","InputAdornment","IconButton","onClick","variant","SearchResults","results","length","Table","aria-label","TableBody","map","movie","TableRow","key","imdbID","TableCell","width","src","Poster","Typography","component","Title","align","Year","pathname","state","TableFooter","TablePagination","count","totalResults","rowsPerPage","page","onChangePage","rowsPerPageOptions","Error","errorMessage","MovieSearch","onSearchQueryChange","bind","onSearch","onPaginationChange","setState","target","preventDefault","fetchMovies","event","newPage","axios","get","params","apikey","s","then","res","data","Response","parseInt","catch","err","MovieDetail","isSelected","isFavourite","toggleFavourite","favouriteMovies","JSON","parse","localStorage","getItem","i","findIndex","x","splice","setItem","stringify","push","location","Paper","item","xs","md","Tooltip","title","float","Genre","Plot","ListItemLink","ListItem","button","Link","FavouriteMovies","favourites","List","ListItemText","primary","App","basename","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b65accc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <MovieIcon className=\"header-item\"></MovieIcon>    \r\n            <Link to='/movie-search' className=\"header-item\" activeClassName=\"active\">Movie Search</Link>\r\n            <Link to='/movie-detail' className=\"header-item\" activeClassName=\"active\">Movie Detail</Link>\r\n            <Link to='/my-favourite-movies' className=\"header-item\" activeClassName=\"active\">My Favourite Movies</Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default class Search extends Component {\r\n  render () {\r\n    return <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: '10vh' }}\r\n      >\r\n        <form onSubmit={this.props.search} className=\"movie-search-form\" noValidate autoComplete=\"off\">\r\n          <TextField\r\n            id=\"movie-search\"\r\n            label=\"Search movies\"\r\n            className=\"movie-search-text-field\"\r\n            value={this.props.searchQuery}\r\n            onChange={e => {\r\n              this.props.onChange(e)\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment>\r\n                  <IconButton onClick={this.props.search}>\r\n                    <SearchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </form>\r\n      </Grid> \r\n    </div>;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Img from 'react-image';\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class SearchResults extends Component {\r\n  render () {\r\n    return(\r\n      <div>\r\n        {this.props.results.length > 0 &&\r\n        <Table aria-label=\"custom pagination table\">\r\n          <TableBody>\r\n            {this.props.results.map(movie => (\r\n              <TableRow key={movie.imdbID}>\r\n                <TableCell style={{ width: 100 }}>\r\n                  <Img src={movie.Poster} className=\"movie-img\"/>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography component=\"p\">\r\n                    {movie.Title}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography component=\"p\">\r\n                    {movie.Year}\r\n                  </Typography>                \r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Typography component=\"p\">\r\n                    <Link to={{\r\n                      pathname: '/movie-detail',\r\n                      state: {\r\n                        movie: movie\r\n                      }\r\n                    }}>See Details</Link>\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>              \r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                count={this.props.totalResults}\r\n                rowsPerPage={10}\r\n                page={this.props.page}\r\n                onChangePage={this.props.onChangePage}\r\n                rowsPerPageOptions={[]}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Error extends Component {\r\n  render () {\r\n    return(\r\n      <h2 className=\"error-message\">{this.props.errorMessage}</h2>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Search from './Search';\r\nimport SearchResults from './SearchResults';\r\nimport Error from './Error';\r\n\r\nexport default class MovieSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchQuery: '',\r\n      results: [],\r\n      totalResults: 0,\r\n      page: 0,\r\n      errorMessage: null\r\n    }\r\n\r\n    this.onSearchQueryChange = this.onSearchQueryChange.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onPaginationChange = this.onPaginationChange.bind(this);\r\n  }\r\n\r\n  onSearchQueryChange(e) {\r\n    this.setState({searchQuery: e.target.value});\r\n  }\r\n\r\n  onSearch(e) {\r\n    e.preventDefault();\r\n    this.setState({page: 0});\r\n    this.fetchMovies(1);\r\n  }\r\n\r\n  onPaginationChange(event, newPage) {\r\n    this.setState({page: newPage})\r\n    this.fetchMovies(newPage + 1);\r\n  };\r\n\r\n  fetchMovies(page) {\r\n    axios.get('https://www.omdbapi.com/', {\r\n      params: { \r\n        apikey: 'a8871d91', \r\n        s: this.state.searchQuery,\r\n        page: page\r\n    }})\r\n    .then(res => {\r\n      if (res.data.Response === 'False') {\r\n        this.setState({errorMessage: res.data.Error});\r\n      } else {\r\n        this.setState({\r\n          results: res.data.Search, \r\n          totalResults: parseInt(res.data.totalResults), \r\n          errorMessage: null\r\n        });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      this.setState({errorMessage: err});\r\n      return null;\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <div>\r\n        <Search \r\n          searchQuery={this.state.searchQuery}\r\n          onChange={this.onSearchQueryChange}\r\n          search={this.onSearch}\r\n          errorMessage={this.state.errorMessage}\r\n        />\r\n        {!this.state.errorMessage ?\r\n          <SearchResults \r\n            results={this.state.results} \r\n            totalResults={this.state.totalResults}\r\n            page={this.state.page}\r\n            onChangePage={this.onPaginationChange}\r\n          /> :\r\n          <Error \r\n            errorMessage={this.state.errorMessage}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Img from 'react-image';\r\nimport Error from './Error';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class MovieDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movie: {},\r\n      isSelected: false,\r\n      errorMessage: null,\r\n      isFavourite: false\r\n    }\r\n\r\n    this.toggleFavourite = this.toggleFavourite.bind(this);\r\n  }\r\n\r\n  toggleFavourite() {\r\n    const favouriteMovies = JSON.parse(localStorage.getItem('favouriteMovies')) || [];\r\n    const movie = this.state.movie;\r\n    if (this.state.isFavourite) {\r\n      const i = favouriteMovies.findIndex(x => x.imdbID === movie.imdbID);\r\n      favouriteMovies.splice(i, 1);\r\n      localStorage.setItem('favouriteMovies', JSON.stringify(favouriteMovies));\r\n    } else {\r\n      if((favouriteMovies.findIndex(x => x.imdbID === movie.imdbID)) === -1) {\r\n        favouriteMovies.push(movie);\r\n        localStorage.setItem('favouriteMovies', JSON.stringify(favouriteMovies));\r\n      }    \r\n    }\r\n    this.setState({isFavourite: !this.state.isFavourite});\r\n  }\r\n\r\n  componentDidMount () {\r\n    if (this.props.location.state) {\r\n      axios.get('https://www.omdbapi.com/', {\r\n        params: { \r\n          apikey: 'a8871d91', \r\n          i: this.props.location.state.movie.imdbID\r\n      }})\r\n      .then(res => {\r\n        if (res.data.Response === 'False') {\r\n          this.setState({errorMessage: res.data.Error});\r\n        } else {\r\n          this.setState({\r\n            movie: res.data, \r\n            errorMessage: null,\r\n            isSelected: true\r\n          });\r\n          const favouriteMovies = JSON.parse(localStorage.getItem('favouriteMovies')) || [];\r\n          if((favouriteMovies.findIndex(x => x.imdbID === res.data.imdbID)) > -1) {\r\n            this.setState({isFavourite: true})\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({errorMessage: err});\r\n        return null;\r\n      });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <div>\r\n        {this.state.errorMessage && <Error errorMessage={this.state.errorMessage}/>}\r\n        <Paper className={'movie-detail-paper'}>\r\n          {this.state.isSelected ?\r\n          <Grid container>\r\n            <Grid item xs={6} md={3}>\r\n              <Img src={this.state.movie.Poster} className=\"movie-detail-img\"/>\r\n            </Grid>\r\n            <Grid item xs={6} md={9} className=\"movie-detail-text\">\r\n              <Typography variant=\"h5\" component=\"h1\">\r\n                {this.state.movie.Title} \r\n                {this.state.isFavourite ? \r\n                  <Tooltip title=\"Remove from favourites\" aria-label=\"remove from favourites\">\r\n                    <StarIcon \r\n                      style={{float:\"right\"}}\r\n                      onClick={this.toggleFavourite}\r\n                    ></StarIcon>\r\n                  </Tooltip> :\r\n                  <Tooltip title=\"Add to favourites\" aria-label=\"add to favourites\">\r\n                    <StarBorderIcon \r\n                      style={{float:\"right\"}}\r\n                      onClick={this.toggleFavourite}\r\n                    ></StarBorderIcon>\r\n                  </Tooltip>\r\n                }\r\n              </Typography>\r\n              <Typography component=\"p\">\r\n                <strong>Year:</strong> {this.state.movie.Year} <br></br>\r\n                <strong>Genre:</strong> {this.state.movie.Genre} <br></br>\r\n                <br></br>\r\n                {this.state.movie.Plot}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid> :\r\n          'Please select movie'\r\n          }\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component={Link}{...props} />; \r\n}\r\n\r\nexport default class FavouriteMovies extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      favourites: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const favouriteMovies = JSON.parse(localStorage.getItem('favouriteMovies')) || [];\r\n    this.setState({favourites : favouriteMovies})\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <Paper className={'movie-detail-paper'}>\r\n        <Tooltip title=\"Click on movie to see details\" aria-label=\"click to see details\">\r\n          <List component=\"nav\" aria-label=\"favourite movies\">\r\n            {this.state.favourites.map((movie) =>\r\n              <ListItemLink key={movie.imdbID} to={{ pathname: '/movie-detail', state: { movie: movie}}}>\r\n                <ListItemText primary={movie.Title} />\r\n              </ListItemLink>\r\n            )}\r\n            {this.state.favourites.length === 0 && 'No Favourite Movies'}\r\n          </List>\r\n        </Tooltip>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport MovieSearch from './components/MovieSearch';\nimport MovieDetail from './components/MovieDetail';\nimport FavouriteMovies from './components/FavouriteMovies';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div>\n        <Header></Header>\n        <Route exact path=\"/\" component={MovieSearch} />\n        <Route path='/movie-search' component={MovieSearch}/>\n        <Route path='/movie-detail' component={MovieDetail}/>\n        <Route path='/my-favourite-movies' component={FavouriteMovies}/>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}